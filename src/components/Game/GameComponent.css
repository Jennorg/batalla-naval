.gameContainer {
  display: flex; /* Mantenemos flex para los elementos principales apilados (título, mensaje, área de juego) */
  flex-direction: column;
  align-items: center;
  gap: 20px;
  width: 80dvw; /* Usamos dVw para una unidad relativa al viewport */
  padding: 30px;
  background-color: var(--secondary-dark-bg);
  border-radius: var(--border-radius-main);
  box-shadow: var(--box-shadow-deep);
  border: 1px solid var(--border-color-dark);
  box-sizing: border-box;
  max-height: 95dvh;
  overflow-y: auto; /* Permitir scroll vertical si el contenido excede la altura */
  max-width: 1600px; /* Un máximo para pantallas muy grandes */
}

h1 {
  font-size: 2.8em;
  color: var(--accent-blue);
  text-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
  margin-bottom: 10px;
  letter-spacing: 1px;
  text-align: center;
  word-break: break-word; /* Para que no se desborde el título */
}

h2 {
  font-size: 1.6em;
  color: var(--text-light);
  margin-top: 0;
  margin-bottom: 15px;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 0.8px;
  word-break: break-word;
}

h3 {
  font-size: 1.3em;
  color: var(--text-secondary);
  margin-bottom: 15px;
  text-align: center;
  word-break: break-word;
}

.game-message {
  font-size: 1.15em;
  font-weight: 500;
  color: var(--text-light);
  background-color: var(--border-color-dark);
  padding: 12px 20px;
  border-radius: var(--border-radius-sm);
  text-align: center;
  margin-bottom: 20px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  min-height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  word-break: break-word;
  box-sizing: border-box;
  max-width: 100%;
}

.turno-label {
  font-size: 1.4em;
  font-weight: 700;
  color: var(--accent-green);
  text-align: center;
  margin-bottom: 20px;
  text-transform: uppercase;
  letter-spacing: 1px;
  word-break: break-word;
  max-width: 100%;
}

/* --- Nuevo Contenedor Principal para el Grid (App.js deberá envolver los tableros y controles) --- */
.game-grid-area {
  display: grid;
  /* Define 5 columnas: 2 para tablero 1, 1 para controles, 2 para tablero 2 */
  grid-template-columns: 2fr 1fr 2fr;
  /* Agregamos una columna vacía a cada lado para un total de 5, o 2fr 1fr 2fr para 5 conceptualmente */
  /* Si realmente quieres 5 COLUMNAS VISIBLES, con los tableros de 2 cada uno y el medio de 1,
     la definición sería:
     grid-template-columns: minmax(300px, 1fr) minmax(300px, 1fr) minmax(200px, 1fr) minmax(300px, 1fr) minmax(300px, 1fr);
     Y luego usar grid-column: span 2; para los tableros.
     Pero tu pedido "2 cada uno y los botones 1" implica 2+1+2=5 columnas de contenido,
     lo cual es mejor modelado como 3 columnas principales y que cada uno tome las proporciones que indicas.
     Mantendré la definición 2fr 1fr 2fr para 3 columnas principales de contenido,
     que visualmente cumplirán con tu "2 para tablero, 1 para botones, 2 para tablero".
  */
  gap: 30px; /* Espacio entre las columnas del grid */
  width: 100%;
  max-width: 1400px; /* Ajusta este max-width según el espacio disponible en pantallas grandes */
  align-items: flex-start; /* Alinea los elementos al inicio de la celda del grid */
  box-sizing: border-box;
}

/* --- Tableros --- */
/* Estas clases ahora serán hijos directos de .game-grid-area */
.tablero-area-jugador {
  grid-column: 1 / span 1; /* Ocupa la primera columna de 2fr */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  padding: 20px;
  background-color: var(--primary-dark-bg);
  border-radius: var(--border-radius-main);
  box-shadow: var(--box-shadow-medium);
  border: 1px solid var(--border-color-dark);
  width: 100%; /* Ocupa el 100% del espacio de su celda de grid */
  box-sizing: border-box;
  aspect-ratio: 1/1; /* Mantiene el tablero cuadrado */
  min-width: 280px; /* Un min-width para los tableros */
  max-width: 450px; /* Para que no crezca indefinidamente */
  justify-self: end; /* Alinea el tablero jugador a la derecha de su columna */
}

.tablero-area-rival {
  grid-column: 3 / span 1; /* Ocupa la tercera columna de 2fr */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  padding: 20px;
  background-color: var(--primary-dark-bg);
  border-radius: var(--border-radius-main);
  box-shadow: var(--box-shadow-medium);
  border: 1px solid var(--border-color-dark);
  width: 100%; /* Ocupa el 100% del espacio de su celda de grid */
  box-sizing: border-box;
  aspect-ratio: 1/1; /* Mantiene el tablero cuadrado */
  min-width: 280px;
  max-width: 450px;
  justify-self: start; /* Alinea el tablero rival a la izquierda de su columna */
}

/* --- Controles de Colocación (columna central) --- */
/* Esta clase ahora será un hijo directo de .game-grid-area */
.controles-colocacion {
  grid-column: 2 / span 1; /* Ocupa la columna central de 1fr */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  width: 100%; /* Ocupa el 100% del espacio de su celda de grid */
  padding: 20px;
  background-color: var(--primary-dark-bg);
  border-radius: var(--border-radius-main);
  box-shadow: var(--box-shadow-medium);
  border: 1px solid var(--border-color-dark);
  box-sizing: border-box;
  /* Eliminamos max-width y max-height específicos aquí, ya que el grid manejará el tamaño */
  /* Si necesitas que sea más compacto, puedes usar padding más pequeño */
}

.lista-piezas-jugador {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 15px;
  width: 100%;
  box-sizing: border-box;
  /* Añadir scroll si hay muchas piezas y el espacio es limitado */
  max-height: 180px; /* Altura máxima para la lista de piezas */
  overflow-y: auto; /* Permite scroll vertical */
  padding-right: 5px; /* Espacio para la barra de scroll */
}

.btns-colocacion {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 15px;
  width: 100%;
  box-sizing: border-box;
}

.btn-orientacion,
.btn-batalla,
.btn-reset {
  padding: 12px 20px;
  font-size: 1.1em;
  font-weight: 600;
  border-radius: var(--border-radius-sm);
  border: none;
  cursor: pointer;
  transition: background-color var(--transition-speed), transform var(--transition-speed), box-shadow var(--transition-speed);
  box-shadow: 0 3px 8px rgba(0, 0, 0, 0.2);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 150px;
  box-sizing: border-box;
  min-width: 120px;
  max-width: 200px; /* Limita el ancho individual de los botones */
  max-height: 60px; /* Para controlar la altura del botón */
}

.btn-orientacion {
  background-color: var(--accent-blue);
  color: white;
}

.btn-orientacion:hover {
  background-color: #0056b3;
  transform: translateY(-2px);
  box-shadow: 0 5px 12px rgba(0, 123, 255, 0.4);
}

.btn-batalla {
  background-color: var(--accent-green);
  color: white;
}

.btn-batalla:hover {
  background-color: #218838;
  transform: translateY(-2px);
  box-shadow: 0 5px 12px rgba(40, 167, 69, 0.4);
}

.btn-reset {
  background-color: var(--accent-red);
  color: white;
  margin-top: 20px; /* Mantener margen superior si no está dentro de un contenedor con gap */
  width: auto;
  max-width: 250px;
  flex-basis: 200px; /* Asegura que el botón de reset tenga un tamaño decente */
  align-self: center; /* Centra el botón de reset si es hijo directo de gameContainer */
}

.btn-reset:hover {
  background-color: #c82333;
  transform: translateY(-2px);
  box-shadow: 0 5px 12px rgba(220, 53, 69, 0.4);
}

/* --- Contenedor de Tableros (ahora redundante si .tablero-area-x son hijos directos del grid) --- */
/* Si mantienes TableroComponent dentro de un div, el div debería ser el que va en el grid.
   Sin embargo, si los TableroComponent son directamente .tablero-area-jugador/.tablero-area-rival,
   entonces esta clase .tableros-container es obsoleta para el layout principal de 5 columnas.
   La he comentado, pero si la necesitas para envolver algo, se podría reintroducir.
*/
/*
.tableros-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 40px;
  width: 100%;
  box-sizing: border-box;
}
*/

/* Media Queries para responsividad */

/* Grandes escritorios: El layout de 5 columnas */
@media (min-width: 1200px) {
  .game-grid-area {
    grid-template-columns: 2fr 1fr 2fr; /* 5 columnas conceptuales */
    gap: 30px; /* Espacio entre columnas */
  }
}

/* Escritorios medianos y laptops: Adaptar el grid o pasar a un layout apilado/flex */
@media (max-width: 1199px) and (min-width: 769px) {
  .game-grid-area {
    /* En pantallas un poco más pequeñas, podemos apilar los controles sobre los tableros
       o mantener una versión de grid si el contenido es pequeño */
    grid-template-columns: 1fr; /* Una sola columna */
    gap: 20px;
    place-items: center; /* Centrar todo el contenido en esta única columna */
  }

  .tablero-area-jugador,
  .tablero-area-rival,
  .controles-colocacion {
    grid-column: 1 / -1; /* Ocupan todo el ancho disponible */
    max-width: 500px; /* Limita el ancho de los componentes apilados */
    width: 100%;
    margin-left: auto; /* Centrar */
    margin-right: auto; /* Centrar */
    justify-self: center; /* Asegura que los componentes se centren dentro de su celda de grid */
  }

  .tablero-area-jugador, .tablero-area-rival {
    max-width: 400px; /* Ajuste para que los tableros no sean enormes */
  }
}

/* Tabletas y móviles: Layout apilado */
@media (max-width: 768px) {
  .gameContainer {
    padding: 15px;
    gap: 15px;
    width: 95dvw; /* Más estrecho en móviles */
    max-height: unset; /* Permitir altura natural en móviles */
    overflow-y: unset; /* Dejar que el body maneje el scroll si es necesario */
  }

  h1 {
    font-size: 2em;
  }
  h2 {
    font-size: 1.4em;
  }
  h3 {
    font-size: 1.1em;
  }
  .game-message, .turno-label {
    font-size: 0.95em;
    padding: 10px 15px;
  }

  .game-grid-area {
    grid-template-columns: 1fr; /* Una sola columna para todos los elementos */
    gap: 15px;
    place-items: center; /* Centrar los elementos apilados */
  }

  .tablero-area-jugador,
  .tablero-area-rival,
  .controles-colocacion {
    grid-column: 1 / -1; /* Ocupan todo el ancho */
    max-width: 370px; /* Limita el ancho de los componentes a un tamaño de tablero */
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    justify-self: center;
  }

  .controles-colocacion {
    padding: 15px;
    gap: 15px;
  }

  .lista-piezas-jugador {
    gap: 10px;
    max-height: 150px; /* Reduce la altura máxima de la lista de piezas */
  }

  .btns-colocacion {
    flex-direction: column; /* Apila los botones de acción */
    align-items: center;
    gap: 10px;
  }

  .btn-orientacion,
  .btn-batalla,
  .btn-reset {
    font-size: 1em;
    padding: 10px 15px;
    max-width: 200px; /* Mantener un max-width para que no sean demasiado anchos */
    min-width: 100px; /* Asegurarse de que no se aplasten */
  }
  .btn-reset {
    margin-top: 10px; /* Reducir margen en móviles */
  }
}